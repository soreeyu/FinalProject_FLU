<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">






	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 디비를 property를 이용해서 아무나 내 디비 정보를 알 수 없게 하기 위해 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" id="propertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:mybatis/myBatis.properties</value>
		</property>
	</bean>
	
	
	
	<!-- datasource -->
		<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
		<property name="username" value="${jdbc.user}"/>
		<property name="password" value="${jdbc.pw}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="driverClassName" value="${jdbc.driver}"/>
		</bean>
		
	<!-- Mybatis -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="mapperLocations" value="classpath:mappers/**/*Mapper.xml" />
		
		<!-- mybatis-config.xml 추가 시 작성 코드 -->
		<!-- <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>-->
	</bean>
	
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean" />
	</bean>
	
	<!-- Transaction -->
	<!-- 			transaction 처리하기 			 -->
	<tx:annotation-driven /><!-- annotation 사용하기 -->
	
	
	<!-- Connection 가진 dataSource 와 연결해주기 -->
	<!-- 이것이 공통 로직들어가는 객체다 -->
	<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	
	
	

	<!-- Upload -->
	<bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>

	
</beans>

