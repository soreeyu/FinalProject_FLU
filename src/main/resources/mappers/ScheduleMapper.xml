<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="ScheduleMapper">

   <!-- project 존재여부 -->
   <select id="checkP" parameterType="java.lang.Integer"
      resultType="java.lang.Integer">
      select count(projectNum) from project where projectnum=#{projectNum} and state='ing'
   </select>


   <!-- 프로젝트에대한 스케줄 존재 여부 -->
   <select id="checkS" parameterType="java.lang.Integer"
      resultType="com.flu.schedule.client.ScheduleMainDTO">
      select * from scheduleMain where projectnum=#{projectNum}
   </select>

   <!-- 시퀀스를 사용한 스케줄 생성 //날짜는 변경 할 수 있어야함 -->
   <insert id="createS" parameterType="java.lang.Integer">
      insert into schedulemain
      (schedulenum, startdate, finishdate, projectnum) values
      (schedule_seq.nextval, null, null, #{projectNum})
   </insert>

   <!-- 스케줄 넘, 시작일, 마감일, 프로젝트 넘 -->
   <select id="mainSInfo" parameterType="java.lang.Integer"
      resultType="com.flu.schedule.client.ScheduleMainDTO">
      select * from scheduleMain where projectnum=#{projectNum}
   </select>
   
   <!-- 스케줄 넘, 시작일, 마감일, 프로젝트 넘 -->
   <select id="mainSInfo2" parameterType="java.lang.Integer"
      resultType="com.flu.schedule.client.ScheduleMainDTO">
      select * from scheduleMain where scheduleNum=#{scheduleNum}
   </select>

   <!-- 메인스케줄 수정 -->
   <update id="mainSUpdate" parameterType="com.flu.schedule.client.ScheduleMainDTO">
      update schedulemain set
      startdate=#{startDate}, finishdate=#{finishDate} where
      scheduleNum=#{scheduleNum}
   </update>

  
   <!--************************* part *********************-->
   <select id="partCount" parameterType="com.flu.schedule.client.SchedulePartDTO" 
        resultType="java.lang.Integer">
        select count(scheduleNum) from schedulepart where schedulenum=#{scheduleNum}
     </select>
   
     <select id="partOne" resultType="com.flu.schedule.client.SchedulePartDTO">
        select * from schedulepart where chedulenum=#{scheduleNum} and partnum=#{partNum}
     </select>
  
   <select id="partList" parameterType="java.lang.Integer" resultType="com.flu.schedule.client.SchedulePartDTO">
   select schedulenum,partnum ,partname
   ,to_char(partStartDate, 'yyyy-MM-dd') partStartDate
   ,to_char(partFinishDate, 'yyyy-MM-dd') partFinishDate
   ,partDescfileO,partdescfileF  from schedulepart 
   where schedulenum=#{scheduleNum} order by partNum asc
   </select>

   
   <insert id="partInsert" parameterType="com.flu.schedule.client.SchedulePartDTO">
      insert into schedulepart (schedulenum, partname, partstartdate, partfinishdate, partnum ,partdescfileo, partdescfilef) values 
      (#{scheduleNum}, #{partName}, #{partStartDate}, #{partFinishDate}, nvl((select max(partNum)+1 from schedulepart
      where schedulenum=${scheduleNum}),0), #{partDescFileO}, #{partDescFileF})
   </insert>
   
   <update id="partUpdate" parameterType="com.flu.schedule.client.SchedulePartDTO">
      update schedulepart set partname=#{partName}, partstartdate=#{partStartDate}, partfinishdate=#{partFinishDate},
      partdescfileO=#{partDescFileO}, partdescfileF=#{partDescFileF}
      where schedulenum=#{scheduleNum} and partnum=#{partNum}
   </update>
   
   <delete id="partDelete" parameterType="com.flu.schedule.client.SchedulePartDTO">
      delete * schedulepart where schedulenum=#{scheduleNum} and partnum=#{partNum}
   </delete>
   
   
   
  
     <!--************************* unit *********************-->
     <select id="unitCount" parameterType="com.flu.schedule.client.ScheduleUnitDTO" 
        resultType="java.lang.Integer">
        select count(scheduleNum) from scheduleunit where schedulenum=#{scheduleNum} 
      and email like '%'||#{email}||'%'
      and unitstate like '%'||#{unitState}||'%'
      <if test="partNum != -1">
         and partnum in #{partNum}
      </if>
     </select>
     
     
   <select id="unitList" parameterType="com.flu.schedule.client.ScheduleUnitDTO"
      resultType="com.flu.schedule.client.ScheduleUnitDTO">
      select distinct U.schedulenum,U.partnum,U.unitnum,U.unitname,U.unitdescribe,U.email
      ,to_char(U.unitStartDate, 'yyyy-MM-dd') unitStartDate
      ,to_char(U.unitFinishDate, 'yyyy-MM-dd') unitFinishDate
      ,U.unitstate,U.unitdescfileo,U.unitdescfilef,P.partname from scheduleunit U,schedulepart P
      where U.schedulenum=#{scheduleNum} 
        and U.schedulenum=P.schedulenum
        and P.partNum=U.partNum
          <if test="partNum != -1">
         and P.partnum in #{partNum}
      </if>
      and email like '%'||#{email}||'%'
      and unitstate like '%'||#{unitState}||'%'
      order by U.partnum asc,U.unitNum asc
   </select>

   <select id="unitOne" parameterType="com.flu.schedule.client.ScheduleUnitDTO"
      resultType="com.flu.schedule.client.ScheduleUnitDTO">
      select distinct U.*,P.partName from scheduleunit U, schedulepart P 
      where U.schedulenum=P.schedulenum and U.scheduleNum=#{scheduleNum}
      and P.partNum=U.partNum and unitNum=#{unitNum}
   </select>


   <insert id="unitInsert" parameterType="com.flu.schedule.client.ScheduleUnitDTO">
      insert into scheduleunit
      (schedulenum, unitnum, unitname,
      unitdescribe,unitstartDate,unitfinishdate, partnum, email, unitstate)
      values (#{scheduleNum}, nvl((select max(unitNum)+1 from scheduleunit
      where schedulenum=#{scheduleNum}),0), #{unitName}, #{unitDescribe},
      #{unitStartDate}, #{unitFinishDate}, #{partNum}, #{email}, '할일')
   </insert>

   <update id="unitUpdate" parameterType="com.flu.schedule.client.ScheduleUnitDTO">
      update scheduleunit set
      unitname=#{unitName}, unitdescribe=#{unitDescribe},
      unitstartdate=#{unitStartDate},
      unitfinishdate=#{unitFinishDate},
      partnum=#{partNum},
      email=#{email},
      where schedulenum=#{scheduleNum} and
      unitNum=#{unitNum}
   </update>

   <delete id="unitDelete" parameterType="com.flu.schedule.client.ScheduleUnitDTO">
      delete * from scheduleunit
      where schedulenum=#{scheduleNum} and unitNum=#{unitNum}
   </delete>
   
   
   <!--************************* user *********************-->
   <select id="userList" parameterType="java.lang.Integer" resultType="com.flu.member.MemberDTO">
       select M.*,A.* from member M,applicant A where A.projectNum=(select projectNum from schedulemain where schedulenum=#{scheduleNum}) and A.email=M.email and A.state='ing'
   </select>
   
   
   <update id="stateChange" parameterType="com.flu.schedule.client.ScheduleUnitDTO">
      update scheduleunit set unitstate=#{unitState} where schedulenum=#{scheduleNum} and unitnum=#{unitNum}
   </update>
   
   
   
   <!-- 
   <insert id="setResult1" parameterType="com.flu.schedule.freelancer.ScheduleFreeTodoResultDTO">
      insert into scheduleunitresult (schedulenum,unitnum,unitresultfilenum,email)
      values (#{scheduleNum},#{unitNum},FREELANCERSCHEDULE_SEQ.NEXTVAL,#{email})
   </insert>
   
   <insert id="setResultFile" parameterType="com.flu.schedule.freelancer.ScheduleResultFileDTO">
      insert into ScheduleResultFiles (unitResultFilenum,resultFname,resultoname,resultfileseq)
      values (FREELANCERSCHEDULE_SEQ.currval,'파일명2','파일명오2',RESULTFILES_SEQ.NEXTVAL)
   </insert>
    -->
     

  </mapper>