<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="CheckMemberMapper">
	<select id="view" resultType="com.flu.member.MemberDTO" parameterType="java.lang.String">
		select * from member where email=#{email}
	</select>
	
  	<insert id="insert" parameterType="com.flu.checkMember.CheckMemberDTO">
  		insert into checkmember values(#{email},#{fname},#{oname},#{name},sysdate)
  	</insert>
  	
  	<select id="clientList" resultType="com.flu.checkMember.CheckMemberViewDTO" parameterType="com.flu.util.ListInfo">
  		select * from (select C.*,rownum R from 
  		(select A.email,B.type,B.name,B.authenticstate,B.kind from checkmember A, member B 
 	
 	<choose>
 		<when test="search!=null">
 			<trim prefix="where" prefixOverrides="and || or">
  			 <if test="kind=='name'">
	  		   B.name like '%' || #{search} || '%'
	  		 </if>
	  		 <if test="kind=='email'">
	  		   B.email like '%' || #{search} || '%'
	  		 </if>
  			 </trim>
  			 and B.type like '%' || #{type} || '%'
  			 and A.email=B.email and B.kind='client' order by A.reg_date asc) C)
  			 where R between #{startRow} and #{lastRow}  			 
 		</when>
 		<otherwise>
 			where A.email=B.email and B.kind='client' order by A.reg_date asc) C)
  			where R between #{startRow} and #{lastRow} 
 		</otherwise>
 	</choose>
 
  	</select>
  	
  	<select id="freelancerList" resultType="com.flu.checkMember.CheckMemberViewDTO" parameterType="com.flu.util.ListInfo">
  		select * from checkmember A, member B where A.email=B.email and B.kind='freelancer' order by reg_date asc
  	</select>
  	
  	
  	<update id="checkUpdate" parameterType="com.flu.member.MemberDTO">
  		update member set authenticstate= #{authenticState} where email= #{email}
  	</update>
  	
  	<select id="checkView" parameterType="java.lang.String" resultType="com.flu.checkMember.CheckMemberViewDTO">
  		select * from member A,checkmember B where A.email=B.email and A.email=#{email}
  	</select>
  
  	<delete id="delete" parameterType="java.lang.String">
  		delete from checkmember where email=#{email}
  	</delete>
  	
  	<select id="clientCount" parameterType="com.flu.util.ListInfo" resultType="java.lang.Integer">
		select count(A.email) count from checkmember A, member B 
 	<choose>
 		<when test="search!=null">
 			<trim prefix="where" prefixOverrides="and || or">
  			 <if test="kind=='name'">
	  		   B.name like '%' || #{search} || '%'
	  		 </if>
	  		 <if test="kind=='email'">
	  		   B.email like '%' || #{search} || '%'
	  		 </if>
  			 </trim>
  			 and B.type like '%' || #{type} || '%'
  			 and A.email=B.email and B.kind='client' order by A.reg_date asc
 		</when>
 		<otherwise>
 			where A.email=B.email and B.kind='client' order by A.reg_date asc
 		</otherwise>
 	</choose>
  	</select>

 
  </mapper>